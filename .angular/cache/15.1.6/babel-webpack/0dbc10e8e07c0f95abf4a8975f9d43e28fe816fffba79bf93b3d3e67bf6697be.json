{"ast":null,"code":"var __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { BrowserContainer } from './storage.browser_container';\nimport { SubStorage } from './storage.sub_storage';\nvar /** @type {?} */PREFIX = 'ANGULAR_PERSISTENCE_STORAGE';\n/**\n * An insternal class which implements the IStorage interface using the SubStorage implementation\n * object and it's implementation of the info object.\n *\n * @export\n * @abstract\n * \\@class AbstractBrowserStorage\n *\n * @author Scott O'Bryan\n * \\@since 1.0\n * @abstract\n */\nexport var AbstractBrowserStorage = function (_super) {\n  __extends(AbstractBrowserStorage, _super);\n  /**\n   * @param {?} storage\n   */\n  function AbstractBrowserStorage(storage) {\n    _super.call(this, PREFIX, new BrowserContainer(storage), storage ? true : false);\n  }\n  return AbstractBrowserStorage;\n}(SubStorage);\n//# sourceMappingURL=storage.abstract_browser.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}