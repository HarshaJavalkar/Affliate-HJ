{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthorizationService {\n  intercept(req, next) {\n    // 1 read token\n    let token = sessionStorage.getItem('token');\n    // if token is found\n    if (token) {\n      //  if token found add it to header of req obj since obj is immutable so we need to trans form first\n      let transformedReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      });\n      return next.handle(transformedReq);\n    } else {\n      return next.handle(req);\n    }\n  }\n  constructor() {}\n}\nAuthorizationService.ɵfac = function AuthorizationService_Factory(t) {\n  return new (t || AuthorizationService)();\n};\nAuthorizationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthorizationService,\n  factory: AuthorizationService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}